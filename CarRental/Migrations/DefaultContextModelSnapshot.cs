// <auto-generated />
using System;
using CarRental.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CarRental.Migrations
{
    [DbContext(typeof(DefaultContext))]
    partial class DefaultContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.1");

            modelBuilder.Entity("CarRental.Models.Car", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("brand");

                    b.Property<bool>("IsTruck")
                        .HasColumnType("bit")
                        .HasColumnName("is_truck");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("model");

                    b.Property<decimal>("RentalPricePerDay")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("rental_price_per_day");

                    b.Property<string>("StateNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("state_number");

                    b.HasKey("Id");

                    b.ToTable("cars");
                });

            modelBuilder.Entity("CarRental.Models.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_of_birth");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("first_name");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("last_name");

                    b.Property<string>("Passport")
                        .IsRequired()
                        .HasColumnType("nchar(10)")
                        .HasColumnName("passport");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("phone");

                    b.Property<string>("SecondName")
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)")
                        .HasColumnName("second_name");

                    b.HasKey("Id");

                    b.ToTable("clients");
                });

            modelBuilder.Entity("CarRental.Models.Discount", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<byte>("Amount")
                        .HasColumnType("tinyint")
                        .HasColumnName("amount");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint")
                        .HasColumnName("client_id");

                    b.Property<DateTime?>("EndDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("end_datetime");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_datetime");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("discounts");
                });

            modelBuilder.Entity("CarRental.Models.Fine", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<byte>("Amount")
                        .HasColumnType("tinyint")
                        .HasColumnName("amount");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("description");

                    b.Property<long>("RentalId")
                        .HasColumnType("bigint")
                        .HasColumnName("rental_id");

                    b.HasKey("Id");

                    b.HasIndex("RentalId");

                    b.ToTable("fines");
                });

            modelBuilder.Entity("CarRental.Models.Rental", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<long>("CarId")
                        .HasColumnType("bigint")
                        .HasColumnName("car_id");

                    b.Property<long>("ClientId")
                        .HasColumnType("bigint")
                        .HasColumnName("client_id");

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("contract_number");

                    b.Property<DateTime>("EndDateTime")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("datetime2")
                        .HasColumnName("end_datetime")
                        .HasComputedColumnSql("(dateadd(day,[number_of_days],[start_datetime]))");

                    b.Property<decimal>("FullPrice")
                        .HasColumnType("decimal(18,2)")
                        .HasColumnName("full_price");

                    b.Property<int>("NumberOfDays")
                        .HasColumnType("int")
                        .HasColumnName("number_of_days");

                    b.Property<DateTime>("StartDateTime")
                        .HasColumnType("datetime2")
                        .HasColumnName("start_datetime");

                    b.HasKey("Id");

                    b.HasIndex("CarId");

                    b.HasIndex("ClientId");

                    b.ToTable("rentals");
                });

            modelBuilder.Entity("CarRental.Models.RoadAccidient", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasColumnName("id")
                        .UseIdentityColumn();

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2")
                        .HasColumnName("date");

                    b.Property<long>("RentalId")
                        .HasColumnType("bigint")
                        .HasColumnName("rental_id");

                    b.Property<string>("TrafficPoliceProtocolId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("traffic_police_protocol_id");

                    b.HasKey("Id");

                    b.HasIndex("RentalId");

                    b.ToTable("road_accidents");
                });

            modelBuilder.Entity("CarRental.Models.Discount", b =>
                {
                    b.HasOne("CarRental.Models.Client", "Client")
                        .WithMany()
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CarRental.Models.Fine", b =>
                {
                    b.HasOne("CarRental.Models.Rental", "Rental")
                        .WithMany("Fines")
                        .HasForeignKey("RentalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rental");
                });

            modelBuilder.Entity("CarRental.Models.Rental", b =>
                {
                    b.HasOne("CarRental.Models.Car", "Car")
                        .WithMany("Rentals")
                        .HasForeignKey("CarId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("CarRental.Models.Client", "Client")
                        .WithMany("Rentals")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Car");

                    b.Navigation("Client");
                });

            modelBuilder.Entity("CarRental.Models.RoadAccidient", b =>
                {
                    b.HasOne("CarRental.Models.Rental", "Rental")
                        .WithMany("RoadAccidients")
                        .HasForeignKey("RentalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rental");
                });

            modelBuilder.Entity("CarRental.Models.Car", b =>
                {
                    b.Navigation("Rentals");
                });

            modelBuilder.Entity("CarRental.Models.Client", b =>
                {
                    b.Navigation("Rentals");
                });

            modelBuilder.Entity("CarRental.Models.Rental", b =>
                {
                    b.Navigation("Fines");

                    b.Navigation("RoadAccidients");
                });
#pragma warning restore 612, 618
        }
    }
}
